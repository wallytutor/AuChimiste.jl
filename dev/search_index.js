var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"W. D. Silva. AuChimiste.jl - A Julia package for chemical data and models manipulation (2025).\n\n\n\n","category":"page"},{"location":"getting-started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting-started/#Importing-tools","page":"Getting Started","title":"Importing tools","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Rather than providing a single package with exported functionalities and sub-modules, AuChimiste uses a different approach of toolbox package. By that it is meant that a main package is available and upon its import other packages become exposed to the import path. This strongly decreases development time as pre-compilation becomes much faster, specially in the early stages of development. ","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"import AuChimiste\n\n# Then you can import one (or all) of the following:\nusing ChemicalElements\nusing ChemicalComponents\nusing ChemicalKinetics\nusing ChemicalReactors\nusing CombustionChemistry\nusing PhysicalChemistry\nusing ChemicalThermodynamics","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"warning: Beware!\nIn the future it is already planned to merge all sub-modules into a single namespace, but as stated above, for the current early development days it is considered faster to proceed this way.","category":"page"},{"location":"getting-started/#Elements-database","page":"Getting Started","title":"Elements database","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"A built-in elements database is provied by ChemicalElements, which is the base building block of AuChimiste. It is an extremely simple module and below we go through the whole of its exposed functionalities in just a few lines of code","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"note: Database extent\nIn general you only need to worry about using ChemicalElements directly if your calculations require isotopes to be added. The default table of elements provides access only to stable elements.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"You can get a list of available atomic symbols with list_elements. Suppose you want to check if deuterium D is present in the list, you can use its symbol for inspection:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":":D ∈ list_elements()","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Since it is not present but your calculations require this isotope, you feed the database with add_element; you also decide to add tritium. In fact add_element will not fail if the element exists, but issue a warning. You can try adding an existing element to see what happens:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"add_element(\"D\", \"deuterium\", 1, 2.0141017781)\nadd_element(\"Tr\", \"tritium\", 1, 3.0160492820)\nadd_element(\"H\", \"hydrogen\", 1, 1.008)","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"If you wish to get back to the standard data you can do so with reset_elements_table. Notice below that deuterium mass is no longer available.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"reset_elements_table()\nhas_element(:D)","category":"page"},{"location":"getting-started/#Element-data-retrieval","page":"Getting Started","title":"Element data retrieval","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"It is possible to retrieve the atomic_mass. Other data retrieval functions include atomic_number and element_name. All of these work with both string and symbols.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"atomic_mass(:C), atomic_number(:C), element_name(:C)","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Getting the whole element data can be achieved at once as follows:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"element(:Cl)","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"In this case is also possible to query the data through the atomic number:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"element(26)","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"On the other hand atomic masses of unstable elements are not accessible:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"try atomic_mass(:Po) catch e; @error(e) end","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"To have an unstable element listed, you need to add_isotope before. For instance, let's add Po-187 to the database.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"add_isotope(:Po, 187.003030)","category":"page"},{"location":"getting-started/#Creating-components","page":"Getting Started","title":"Creating components","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"m = component(:stoichiometry; Al=2, O=3)","category":"page"},{"location":"getting-started/#Combining-components","page":"Getting Started","title":"Combining components","text":"","category":"section"},{"location":"getting-started/#Quantities-of-matter","page":"Getting Started","title":"Quantities of matter","text":"","category":"section"},{"location":"public-api/#Public-API","page":"Public API","title":"Public API","text":"","category":"section"},{"location":"public-api/#ChemicalElements","page":"Public API","title":"ChemicalElements","text":"","category":"section"},{"location":"public-api/","page":"Public API","title":"Public API","text":"CurrentModule = ChemicalElements","category":"page"},{"location":"public-api/","page":"Public API","title":"Public API","text":"ChemicalElements.has_element\nChemicalElements.list_elements\nChemicalElements.reset_elements_table\nChemicalElements.add_element\nChemicalElements.add_isotope\nChemicalElements.atomic_mass\nChemicalElements.atomic_number\nChemicalElements.element_name\nChemicalElements.element","category":"page"},{"location":"public-api/#ChemicalElements.has_element","page":"Public API","title":"ChemicalElements.has_element","text":"has_element(e::Union{String, Symbol})\n\nCheck if element exists in list of atomic symbols.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.list_elements","page":"Public API","title":"ChemicalElements.list_elements","text":"list_elements()\n\nProvides access to the list of atomic symbols.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.reset_elements_table","page":"Public API","title":"ChemicalElements.reset_elements_table","text":"reset_elements_table()\n\nRemove any user-defined element.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.add_element","page":"Public API","title":"ChemicalElements.add_element","text":"add_element(\n    symbol::String,\n    name::String,\n    number::Int64,\n    mass::Float64;\n    verbose = true\n)\n\nCreate chemical element name with associated symbol and atomic number. The value of atomic mass is given in grams per mole.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.add_isotope","page":"Public API","title":"ChemicalElements.add_isotope","text":"add_isotope(\n    symbol::String,\n    mass::Float64;\n    name = nothing,\n    verbose = true\n)\n\nCreate isotope of element symbol with provided mass in grams per mole. If isothope is known by a specific name then use it instead of a name-mass naming scheme.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.atomic_mass","page":"Public API","title":"ChemicalElements.atomic_mass","text":"atomic_mass(e::Union{String,Symbol})\n\nAtomic mass of element [g/mol].\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.atomic_number","page":"Public API","title":"ChemicalElements.atomic_number","text":"atomic_number(e::Union{String,Symbol})\n\nAtomic number of element.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.element_name","page":"Public API","title":"ChemicalElements.element_name","text":"element_name(e::Union{String,Symbol})\n\nElement name from atomic symbol.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalElements.element","page":"Public API","title":"ChemicalElements.element","text":"element(e::Int64)\nelement(e::Union{String,Symbol})\n\nElement data from symbol or number.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalComponents","page":"Public API","title":"ChemicalComponents","text":"","category":"section"},{"location":"public-api/","page":"Public API","title":"Public API","text":"CurrentModule = ChemicalComponents","category":"page"},{"location":"public-api/","page":"Public API","title":"Public API","text":"ChemicalComponents.stoichiometry\nChemicalComponents.mole_proportions\nChemicalComponents.mass_proportions\nChemicalComponents.component","category":"page"},{"location":"public-api/#ChemicalComponents.stoichiometry","page":"Public API","title":"ChemicalComponents.stoichiometry","text":"stoichiometry(; kw...)\n\nCreate composition based on elemental stoichiometry.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalComponents.mole_proportions","page":"Public API","title":"ChemicalComponents.mole_proportions","text":"mole_proportions(; scale = nothing, kw...)\n\nCreate composition based on relative molar proportions.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalComponents.mass_proportions","page":"Public API","title":"ChemicalComponents.mass_proportions","text":"mole_proportions(; scale = nothing, kw...)\n\nCreate composition based on relative molar proportions.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalComponents.component","page":"Public API","title":"ChemicalComponents.component","text":"component(spec; kw...)\n\nCompile component from given composition specification.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalKinetics","page":"Public API","title":"ChemicalKinetics","text":"","category":"section"},{"location":"public-api/","page":"Public API","title":"Public API","text":"CurrentModule = ChemicalKinetics","category":"page"},{"location":"public-api/#ChemicalReactors","page":"Public API","title":"ChemicalReactors","text":"","category":"section"},{"location":"public-api/","page":"Public API","title":"Public API","text":"CurrentModule = ChemicalReactors","category":"page"},{"location":"public-api/#CombustionChemistry","page":"Public API","title":"CombustionChemistry","text":"","category":"section"},{"location":"public-api/","page":"Public API","title":"Public API","text":"CurrentModule = CombustionChemistry","category":"page"},{"location":"public-api/#PhysicalChemistry","page":"Public API","title":"PhysicalChemistry","text":"","category":"section"},{"location":"public-api/","page":"Public API","title":"Public API","text":"CurrentModule = PhysicalChemistry","category":"page"},{"location":"public-api/","page":"Public API","title":"Public API","text":"PhysicalChemistry.mean_molecular_mass\nPhysicalChemistry.get_mole_fractions\nPhysicalChemistry.get_mass_fractions","category":"page"},{"location":"public-api/#PhysicalChemistry.mean_molecular_mass","page":"Public API","title":"PhysicalChemistry.mean_molecular_mass","text":"mean_molecular_mass(U, W; basis)\n\nCompute mean molecular mass based on given composition data.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#PhysicalChemistry.get_mole_fractions","page":"Public API","title":"PhysicalChemistry.get_mole_fractions","text":"get_mole_fractions(Y, W)\nget_mole_fractions(Y, W, M)\n\nGet mole fractions from mass fractions.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#PhysicalChemistry.get_mass_fractions","page":"Public API","title":"PhysicalChemistry.get_mass_fractions","text":"get_mass_fractions(X, W)\nget_mass_fractions(X, W, M)\n\nGet mass fractions from mole fractions.\n\n\n\n\n\n","category":"function"},{"location":"public-api/#ChemicalThermodynamics","page":"Public API","title":"ChemicalThermodynamics","text":"","category":"section"},{"location":"public-api/","page":"Public API","title":"Public API","text":"CurrentModule = ChemicalThermodynamics","category":"page"},{"location":"#AuChimiste-Toolbox","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"","category":"section"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"From elements to plain gold (and kinetics), all in plain Julia.","category":"page"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"AuChimiste is an alchimiste wordplay meaning to the chemist in French.","category":"page"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"Please check the Getting Started guide in the sidebar.","category":"page"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"If this module was useful in your work, please consider citing us [1].","category":"page"},{"location":"#Development-rules","page":"AuChimiste Toolbox","title":"Development rules","text":"","category":"section"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"Code written, code documented, code tested.\nCode lines make 72 characters, never more than 79.\nCode is not cluttered and comments are minimal.\nCode abuses of multiple dispatch if needed.\nCode is Julia, nothing else.","category":"page"},{"location":"#Related-tools","page":"AuChimiste Toolbox","title":"Related tools","text":"","category":"section"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"Searching for chemistry, kinetics, or thermodynamics in Julia Packages does not lead to any convincing package or ecosystem in competition with what is aimed here, justifying its existence. ","category":"page"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"Some clarifications regarding the design choices of this package:","category":"page"},{"location":"","page":"AuChimiste Toolbox","title":"AuChimiste Toolbox","text":"It does not intend to replace Cantera, but to provide similar functionality in a algorithmically-differentiable way for some of its applications. The main difference here is the focus at supporting user-defined models.\nIt also does not compete with pyJac as all code generation is aimed to be plain Julia. While pyJac uses analytically derived formulas for jacobian evaluation, our intent here is to let the user chose how the AD code will be employed in their simulations.\nRegarding Catalyst.jl, our goal is not to analyse kinetics in the same sense, but to use mechanisms (with thermochemistry integrated, what lacks there) in larger simulations.","category":"page"}]
}
